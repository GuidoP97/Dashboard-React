{"version":3,"sources":["components/Header.js","components/SmallCard.js","components/Overview.js","components/Switch.js","components/Card.js","components/TopCardList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","children","className","SmallCard","textViews","socialIcon","followers","danger","rowIcon","percentage","dangerClass","src","alt","listSmallCard","id","Overview","map","items","Switch","setDarkMode","checked","setChecked","ref","useRef","type","name","onChange","current","htmlFor","Card","username","todayFollower","cardClass","cardListData","TopCardList","cardData","App","useState","darkMode","mainClass","changeMedia","mq","matches","useEffect","window","matchMedia","addListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc723fa0.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Header.css\"\r\n\r\nconst Header = ({children}) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"wrapper\">\r\n          <div className=\"header-grid\">\r\n            <div>\r\n              <h1 className=\"h1\">Social Media Dashboard</h1>\r\n              <p className=\"header-total\">Total de followers: 23,004</p>\r\n            </div>\r\n            {children}\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './SmallCard.css'\r\n\r\nconst SmallCard = ({textViews, socialIcon, followers, danger, rowIcon, percentage}) => {\r\n  const dangerClass = `card-small-percentage ${danger}`\r\n  return (\r\n    <div className=\"card-small\">\r\n      <p className=\"card-small-views\">{ textViews }</p>\r\n      <p className=\"card-small-icon\">\r\n          <img src={socialIcon} alt=\"\"/>\r\n      </p>\r\n      <p className=\"card-small-number\">{followers}</p>\r\n      <p className={dangerClass}>\r\n          <span>\r\n              <img src={rowIcon} alt=\"\"/>\r\n              {percentage}\r\n          </span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SmallCard;\r\n","import React from 'react';\r\nimport SmallCard from './SmallCard';\r\nimport './Overview.css'\r\n\r\nconst listSmallCard = [\r\n  {\r\n    id: 1,\r\n    textViews: \"Page Views\", \r\n    socialIcon: \"images/icon-facebook.svg\",\r\n    followers: \"87\",\r\n    danger: \"\",\r\n    rowIcon: \"images/icon-up.svg\",\r\n    percentage: \"3%\",\r\n  },\r\n  {\r\n    id : 2,\r\n    textViews : \"Likes\", \r\n    socialIcon:\"images/icon-facebook.svg\",\r\n    followers: \"52\",\r\n    danger: \"is-danger\",\r\n    rowIcon: \"images/icon-down.svg\",\r\n    percentage: \"2%\",\r\n  },\r\n  {\r\n    id: 3,\r\n    textViews : \"Likes\", \r\n    socialIcon:\"images/icon-instagram.svg\",\r\n    followers: \"5462\",\r\n    danger: \"\",\r\n    rowIcon: \"images/icon-up.svg\",\r\n    percentage: \"2257%\",\r\n  },\r\n  {\r\n    id: 4,\r\n    textViews : \"Profile Views\", \r\n    socialIcon:\"images/icon-instagram.svg\",\r\n    followers: \"52k\",\r\n    danger: \"\",\r\n    rowIcon: \"images/icon-up.svg\",\r\n    percentage: \"1375%\",\r\n  },\r\n  {\r\n    id: 5,\r\n    textViews : \"Retweets\", \r\n    socialIcon:\"images/icon-twitter.svg\",\r\n    followers: \"117\",\r\n    danger: \"\",\r\n    rowIcon: \"images/icon-up.svg\",\r\n    percentage: \"303%\",\r\n  },\r\n  {\r\n    id: 6,\r\n    textViews : \"Likes\", \r\n    socialIcon:\"images/icon-twitter.svg\",\r\n    followers: \"507\",\r\n    danger: \"\",\r\n    rowIcon: \"images/icon-up.svg\",\r\n    percentage: \"553%\",\r\n  },\r\n  {\r\n    id: 7,\r\n    textViews : \"Likes\", \r\n    socialIcon:\"images/icon-youtube.svg\",\r\n    followers: \"107\",\r\n    danger: \"is-danger\",\r\n    rowIcon: \"images/icon-down.svg\",\r\n    percentage: \"19%\",\r\n  },\r\n  {\r\n    id: 8,\r\n    textViews : \"Total Views\", \r\n    socialIcon:\"images/icon-youtube.svg\",\r\n    followers: \"1407\",\r\n    danger: \"is-danger\",\r\n    rowIcon: \"images/icon-down.svg\",\r\n    percentage: \"12%\",\r\n  },\r\n]\r\n\r\nconst Overview = () => {\r\n  return (\r\n    <section className=\"overview\">\r\n        <div className=\"wrapper\">\r\n            <h2 className=\"title\">Overview - Today</h2>\r\n            <div className=\"grid\">\r\n              {\r\n                listSmallCard.map((items) => (\r\n                  <SmallCard\r\n                    key={items.id}\r\n                    {...items}\r\n                  />\r\n                ))\r\n              }\r\n            </div>\r\n        </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Overview;\r\n","import React, { useRef } from 'react';\r\nimport \"./Switch.css\"\r\n\r\nconst Switch = ({setDarkMode, checked, setChecked}) => {\r\n\r\n  const ref = useRef(null)\r\n  const handleChange = () => {\r\n    setChecked(ref.current.checked)\r\n    setDarkMode(ref.current.checked)\r\n  }\r\n\r\n  return (\r\n    <div className=\"dark-mode\">\r\n      <p className=\"dark-mode-title\">Dark Mode</p>\r\n      <input\r\n        checked={checked}\r\n        ref={ref}\r\n        type=\"checkbox\" \r\n        className=\"checkbox\" \r\n        name=\"checkbox\" \r\n        id=\"checkbox\" \r\n        onChange={handleChange}\r\n      />\r\n      <label className=\"switch\" htmlFor=\"checkbox\"></label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Switch;\r\n","import React from 'react';\r\nimport \"./Card.css\";\r\n\r\nconst Card = ({username, name, socialIcon, followers, rowIcon, todayFollower}) => {\r\n  const cardClass = `card ${name}`\r\n  return (\r\n    <article className={cardClass}>\r\n      <p className=\"card-title\">\r\n          <img src={socialIcon} alt=\"\"/>{username}\r\n      </p>\r\n      <p className=\"card-followers\">\r\n          <span className=\"card-followers-number\">{followers}</span>\r\n          <span className=\"card-followers-title\">Followers</span>\r\n      </p>\r\n      <p className=\"card-today\">\r\n          <img src={rowIcon} alt=\"\"/>{todayFollower} Today\r\n      </p>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\nimport './TopCardList.css'\r\n\r\nconst cardListData = [\r\n    {\r\n        id: 0,\r\n        username: '@PodestaGuido',\r\n        followers: '1987',\r\n        socialIcon: 'images/icon-facebook.svg',\r\n        rowIcon: 'images/icon-up.svg',\r\n        name: \"facebook\",\r\n        todayFollower: 12,\r\n    },\r\n    {\r\n        id: 1,\r\n        username: '@PodestaGuido',\r\n        followers: '28K',\r\n        socialIcon: 'images/icon-twitter.svg',\r\n        rowIcon: 'images/icon-up.svg',\r\n        name: \"twitter\",\r\n        todayFollower: 25,\r\n    },\r\n    {\r\n        id: 2,\r\n        username: '@PodestaGuido',\r\n        followers: '6K',\r\n        socialIcon: 'images/icon-instagram.svg',\r\n        rowIcon: 'images/icon-up.svg',\r\n        name: \"instagram\",\r\n        todayFollower: 10,\r\n    },\r\n    {\r\n        id: 3,\r\n        username: '@PodestaGuido',\r\n        followers: '12K',\r\n        socialIcon: 'images/icon-youtube.svg',\r\n        rowIcon: 'images/icon-down.svg',\r\n        name: \"youtube\",\r\n        todayFollower: 30,\r\n    },\r\n  ]\r\n\r\nconst TopCardList = () => {\r\n  return (\r\n    <section className=\"top-cards\">\r\n        <div className=\"wrapper\">\r\n            <div className=\"grid\">\r\n                {\r\n                    cardListData.map((cardData) => (\r\n                        <Card\r\n                            key={cardData.id}\r\n                            {...cardData}\r\n                        />\r\n                    ))\r\n                }\r\n                {/* <!-- Facebook --> */}\r\n                {/* <!-- Twitter --> */}\r\n                {/* <article className=\"card twitter\">\r\n                    <p className=\"card-title\">\r\n                        <img src=\"images/icon-twitter.svg\" alt=\"\"/> @PodestaGuido\r\n                    </p>\r\n                    <p className=\"card-followers\">\r\n                        <span className=\"card-followers-number\">28K</span>\r\n                        <span className=\"card-followers-title\">Followers</span>\r\n                    </p>\r\n                    <p className=\"card-today\">\r\n                        <img src=\"images/icon-up.svg\" alt=\"\"/> 12 Today\r\n                    </p>\r\n                </article> */}\r\n                {/* <!-- Instagram --> */}\r\n                {/* <article className=\"card instagram\">\r\n                    <p className=\"card-title\">\r\n                        <img src=\"images/icon-instagram.svg\" alt=\"\"/> @PodestaGuido\r\n                    </p>\r\n                    <p className=\"card-followers\">\r\n                        <span className=\"card-followers-number\">6K</span>\r\n                        <span className=\"card-followers-title\">Followers</span>\r\n                    </p>\r\n                    <p className=\"card-today\">\r\n                        <img src=\"images/icon-up.svg\" alt=\"\"/> 12 Today\r\n                    </p>\r\n                </article> */}\r\n                {/* <!-- Youtube --> */}\r\n                {/* <article className=\"card youtube\">\r\n                    <p className=\"card-title\">\r\n                        <img src=\"images/icon-youtube.svg\" alt=\"\"/> @PodestaGuido\r\n                    </p>\r\n                    <p className=\"card-followers\">\r\n                        <span className=\"card-followers-number\">12K</span>\r\n                        <span className=\"card-followers-title\">Followers</span>\r\n                    </p>\r\n                    <p className=\"card-today\">\r\n                        <img src=\"images/icon-up.svg\" alt=\"\"/> 12 Today\r\n                    </p>\r\n                </article> */}\r\n            </div>\r\n        </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default TopCardList;\r\n","import React, {useState, useEffect} from 'react';\nimport Header from './components/Header';\nimport Overview from './components/Overview';\nimport Switch from './components/Switch';\nimport TopCardList from './components/TopCardList';\nimport './Globals.css';\n\nfunction App() {\n\n  const [darkMode, setDarkMode] = useState(false)\n  const [checked, setChecked] = useState(false)\n\n  const mainClass = darkMode ? 'is-dark-mode' : 'is-light-mode'\n\n  function changeMedia(mq) {\n    setDarkMode(mq.matches)\n    setChecked(mq.matches)\n  }\n\n  useEffect(() => {\n    const mq = window.matchMedia('(prefers-color-scheme: dark)');\n    mq.addListener(changeMedia)\n    setDarkMode(mq.matches)\n    setChecked(mq.matches)\n  },[])\n\n  return (\n    <main className={mainClass}>\n      <Header>\n        <Switch \n          setDarkMode={setDarkMode}\n          setChecked={setChecked}\n          checked={checked}\n        />\n      </Header>\n      <TopCardList/>\n      <Overview/>\n    </main>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}